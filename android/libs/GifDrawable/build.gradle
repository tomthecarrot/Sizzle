buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:1.2.3'
    }
}

apply plugin: 'com.android.library'
apply from: 'gradle-mvn-push.gradle'

android {
    compileSdkVersion 22
    buildToolsVersion '22.0.1'
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 22
        buildConfigField 'String', 'NATIVE_LIBRARY_NAME', '"' + NATIVE_LIBRARY_NAME + '"'
        ndk {
            if (isDebugBuild()) {
                moduleName NATIVE_LIBRARY_NAME
                abiFilter 'all'
                ldLibs 'jnigraphics', 'android', 'log'
                cFlags '-Ofast -DDEBUG'
            } else {
                moduleName NATIVE_LIBRARY_NAME
                ldLibs 'jnigraphics', 'android'
                abiFilter 'all'
                cFlags '-fvisibility=hidden -Ofast -finline-functions'
            }
        }
    }
    buildTypes.debug.jniDebuggable isDebugBuild()

    if (shouldApplyFlavors()) {
        productFlavors {
            flavors.each() {
                String flavor = it
                "${it}" {
                    ndk {
                        abiFilter flavor
                    }
                }
            }
            fat
        }
    }
}

allprojects {
    version = VERSION_NAME
    group = GROUP
    repositories {
        mavenCentral()
    }
    dependencies {
        provided 'com.android.support:support-annotations:22.1.1'
    }
}

afterEvaluate { project ->
    android.libraryVariants.all { variant ->
        tasks.androidJavadocs.doFirst {
            classpath += files(variant.javaCompile.classpath.files)
        }
    }
}

def shouldApplyFlavors() {
    def flavors = ['armeabi', 'armeabi-v7a', 'x86', 'mips', 'arm64-v8a', 'mips64', 'x86_64']
    boolean applyFlavors = false
    gradle.startParameter.taskNames.each() {
        String normalizedTaskName = it.toLowerCase(Locale.US)
        flavors.each() {
            applyFlavors |= normalizedTaskName.contains(it)
        }
    }
    applyFlavors
}

def isDebugBuild() {
    !gradle.startParameter.taskNames.contains("uploadArchives") && VERSION_NAME.contains("SNAPSHOT")
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.4'
}